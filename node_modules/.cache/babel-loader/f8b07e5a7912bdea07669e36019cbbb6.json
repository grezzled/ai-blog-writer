{"ast":null,"code":"import { Configuration, OpenAIApi } from \"openai\";\n\nasync function validateApiKey(apiKey) {\n  console.log('called');\n  const configuration = new Configuration({\n    apiKey: apiKey\n  });\n  const openai = new OpenAIApi(configuration);\n\n  try {\n    const completion = await openai.createCompletion({\n      model: \"text-davinci-002\"\n    });\n    console.log(\"result\" + completion.data.choices[0].text);\n    return true;\n  } catch (error) {\n    console.log('False');\n    return false;\n  }\n}\n\nexport { validateApiKey };","map":{"version":3,"names":["Configuration","OpenAIApi","validateApiKey","apiKey","console","log","configuration","openai","completion","createCompletion","model","data","choices","text","error"],"sources":["/Users/grezzled/Desktop/grezz-ai-writer/app/src/openAi/apiGateway.js"],"sourcesContent":["import { Configuration, OpenAIApi } from \"openai\"\n\n\nasync function validateApiKey(apiKey) {\n    console.log('called')\n    const configuration = new Configuration({\n        apiKey: apiKey,\n    });\n    const openai = new OpenAIApi(configuration);\n\n    try {\n        const completion = await openai.createCompletion({\n            model: \"text-davinci-002\",\n        });\n        console.log(\"result\" + completion.data.choices[0].text)\n        return true\n    } catch (error) {\n        console.log('False')\n        return false;\n    }\n}\n\nexport { validateApiKey }"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,SAAxB,QAAyC,QAAzC;;AAGA,eAAeC,cAAf,CAA8BC,MAA9B,EAAsC;EAClCC,OAAO,CAACC,GAAR,CAAY,QAAZ;EACA,MAAMC,aAAa,GAAG,IAAIN,aAAJ,CAAkB;IACpCG,MAAM,EAAEA;EAD4B,CAAlB,CAAtB;EAGA,MAAMI,MAAM,GAAG,IAAIN,SAAJ,CAAcK,aAAd,CAAf;;EAEA,IAAI;IACA,MAAME,UAAU,GAAG,MAAMD,MAAM,CAACE,gBAAP,CAAwB;MAC7CC,KAAK,EAAE;IADsC,CAAxB,CAAzB;IAGAN,OAAO,CAACC,GAAR,CAAY,WAAWG,UAAU,CAACG,IAAX,CAAgBC,OAAhB,CAAwB,CAAxB,EAA2BC,IAAlD;IACA,OAAO,IAAP;EACH,CAND,CAME,OAAOC,KAAP,EAAc;IACZV,OAAO,CAACC,GAAR,CAAY,OAAZ;IACA,OAAO,KAAP;EACH;AACJ;;AAED,SAASH,cAAT"},"metadata":{},"sourceType":"module"}