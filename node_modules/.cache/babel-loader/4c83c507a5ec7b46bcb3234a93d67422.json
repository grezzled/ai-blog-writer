{"ast":null,"code":"import { Configuration, OpenAIApi } from \"openai\";\n\nasync function validateApiKey(apiKey) {\n  const configuration = new Configuration({\n    apiKey: apiKey\n  });\n  const openai = new OpenAIApi(configuration);\n\n  try {\n    const completion = await openai.createCompletion({\n      model: \"text-davinci-002\"\n    });\n    console.log(\"result\" + completion.data.choices[0].text);\n  } catch (error) {\n    console.log('False');\n    return false;\n  }\n\n  return true;\n}\n\nexport { validateApiKey };","map":{"version":3,"names":["Configuration","OpenAIApi","validateApiKey","apiKey","configuration","openai","completion","createCompletion","model","console","log","data","choices","text","error"],"sources":["/Users/grezzled/Desktop/grezz-ai-writer/app/src/openAi/apiGateway.js"],"sourcesContent":["import { Configuration, OpenAIApi } from \"openai\"\n\n\nasync function validateApiKey(apiKey) {\n    \n    const configuration = new Configuration({\n        apiKey: apiKey,\n    });\n    const openai = new OpenAIApi(configuration);\n\n    try {\n        const completion = await openai.createCompletion({\n            model: \"text-davinci-002\",\n        });\n        console.log(\"result\" + completion.data.choices[0].text)\n    } catch (error) {\n        console.log('False')\n        return false;\n    }\n    return true\n}\n\nexport { validateApiKey }"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,SAAxB,QAAyC,QAAzC;;AAGA,eAAeC,cAAf,CAA8BC,MAA9B,EAAsC;EAElC,MAAMC,aAAa,GAAG,IAAIJ,aAAJ,CAAkB;IACpCG,MAAM,EAAEA;EAD4B,CAAlB,CAAtB;EAGA,MAAME,MAAM,GAAG,IAAIJ,SAAJ,CAAcG,aAAd,CAAf;;EAEA,IAAI;IACA,MAAME,UAAU,GAAG,MAAMD,MAAM,CAACE,gBAAP,CAAwB;MAC7CC,KAAK,EAAE;IADsC,CAAxB,CAAzB;IAGAC,OAAO,CAACC,GAAR,CAAY,WAAWJ,UAAU,CAACK,IAAX,CAAgBC,OAAhB,CAAwB,CAAxB,EAA2BC,IAAlD;EACH,CALD,CAKE,OAAOC,KAAP,EAAc;IACZL,OAAO,CAACC,GAAR,CAAY,OAAZ;IACA,OAAO,KAAP;EACH;;EACD,OAAO,IAAP;AACH;;AAED,SAASR,cAAT"},"metadata":{},"sourceType":"module"}