{"ast":null,"code":"import { Configuration, OpenAIApi } from \"openai\";\n\nasync function validateApiKey(apiKey) {\n  const configuration = new Configuration({\n    apiKey: apiKey\n  });\n  const openai = new OpenAIApi(configuration);\n\n  try {\n    const completion = await openai.createCompletion({\n      model: \"text-davinci-002\"\n    });\n    console.log(\"result\" + completion.data.choices[0].text);\n  } catch (error) {\n    console.log('False');\n    return false;\n  }\n\n  return true;\n}\n\nasync function generateTitles(apiKey, keywords) {\n  // return \"-Car vs. Motorcycle: The Pros and Cons  -The debate of Car vs. Motorcycle: Which is better? -Advantages and disadvantages of Cars vs Motorcycles -Cars vs Motorcycles: A Comprehensive Comparison -The Pros and Cons of Cars and Motorcycles\"\n  const configuration = new Configuration({\n    apiKey: apiKey\n  });\n  const openai = new OpenAIApi(configuration);\n\n  try {\n    const completion = await openai.createCompletion({\n      model: \"text-davinci-002\",\n      prompt: \"Generate blog topics on: \" + keywords + \"\\n\\n 1.\",\n      temperature: 0.7,\n      max_tokens: 100,\n      top_p: 1,\n      frequency_penalty: 0,\n      presence_penalty: 0\n    });\n    return completion.data.choices[0].text;\n  } catch (error) {\n    if (error.response) {\n      console.error(error.response.status);\n      console.error(error.response.data);\n    } else {\n      console.error(error);\n    }\n\n    return false;\n  }\n}\n\nasync function generateDescriptions(apiKey, title) {\n  // return \"\" +\n  //     \"1. many people debate whether cars or motorcycles are better. There are pros and cons to both. It really depends on what you are looking for in a vehicle. \\n\" +\n  //     \"2. Cars vs. motorcycles: which is better for you? It depends on your needs and preferences. Consider the pros and cons of each before making a decision. \\n\" +\n  //     \"3. Can't decide between a car and a motorcycle? Here's a helpful guide to help you make the best choice for you.Consider your needs and wants before making a decision. \\n\" +\n  //     \"4. Not sure if a car or motorcycle is right for you ? Here's a helpful guide to help you decide. Consider the pros and cons of each before making a final decision. \\n\" +\n  //     \"5. Car or motorcycle ? It's a tough choice, but we're here to help.Consider your needs and preferences before making a decision.\" +\n  //     \"6. Trying to decide between a car and a motorcycle ? Here are some things to consider before making your final decision.\" +\n  //     \"7. Still trying to decide if a car or motorcycle is right for you ? Check out this helpful guide to help you make the best decision for you.\"\n  const configuration = new Configuration({\n    apiKey: apiKey\n  });\n  const openai = new OpenAIApi(configuration);\n\n  try {\n    const completion = await openai.createCompletion({\n      model: \"text-davinci-002\",\n      prompt: \"Generate blog meta descriptions on:\" + title + \"\\n\\n 1.\",\n      temperature: 0.7,\n      max_tokens: 200,\n      top_p: 1,\n      frequency_penalty: 0,\n      presence_penalty: 0\n    });\n    console.log(completion.data.choices[0].text);\n    return completion.data.choices[0].text;\n  } catch (error) {\n    if (error.response) {\n      console.error(error.response.status);\n      console.error(error.response.data);\n    } else {\n      console.error(error);\n    }\n\n    return false;\n  }\n}\n\nasync function generateHeadings(apiKey, title) {\n  // return \"-Car vs. Motorcycle: The Pros and Cons  -The debate of Car vs. Motorcycle: Which is better? -Advantages and disadvantages of Cars vs Motorcycles -Cars vs Motorcycles: A Comprehensive Comparison -The Pros and Cons of Cars and Motorcycles\"\n  const configuration = new Configuration({\n    apiKey: apiKey\n  });\n  const openai = new OpenAIApi(configuration);\n\n  try {\n    const completion = await openai.createCompletion({\n      model: \"text-davinci-002\",\n      prompt: \"Expand the blog title in to high level blog sections: \" + title + \" \\n\\n- Introduction: \",\n      temperature: 0.7,\n      max_tokens: 200,\n      top_p: 1,\n      frequency_penalty: 0,\n      presence_penalty: 0\n    });\n    console.log(completion.data.choices[0].text);\n    return completion.data.choices[0].text;\n  } catch (error) {\n    if (error.response) {\n      console.error(error.response.status);\n      console.error(error.response.data);\n    } else {\n      console.error(error);\n    }\n\n    return false;\n  }\n}\n\nasync function generateBlog(apiKey, headings) {\n  let blog = \"\";\n  const configuration = new Configuration({\n    apiKey: apiKey\n  });\n  const openai = new OpenAIApi(configuration);\n\n  for (let i = 0; i < headings.length; i++) {\n    blog.concat(\"\\n\" + headings[i]);\n\n    try {\n      const completion = await openai.createCompletion({\n        model: \"text-davinci-002\",\n        prompt: \"Expand the blog section in to a detailed professional , witty and clever explanation. \\n\\n\" + headings[i],\n        temperature: 0.7,\n        max_tokens: 300,\n        top_p: 1,\n        frequency_penalty: 0,\n        presence_penalty: 0\n      });\n      blog.concat(\"\\n\" + completion.data.choices[0].text);\n    } catch (error) {\n      if (error.response) {\n        console.error(error.response.status);\n        console.error(error.response.data);\n      } else {\n        console.error(error);\n      }\n\n      return false;\n    }\n  }\n\n  console.log(blog);\n  return blog;\n}\n\nexport { validateApiKey, generateTitles, generateDescriptions, generateHeadings, generateBlog };","map":{"version":3,"names":["Configuration","OpenAIApi","validateApiKey","apiKey","configuration","openai","completion","createCompletion","model","console","log","data","choices","text","error","generateTitles","keywords","prompt","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","response","status","generateDescriptions","title","generateHeadings","generateBlog","headings","blog","i","length","concat"],"sources":["/Users/grezzled/Desktop/grezz-ai-writer/app/src/openAi/apiGateway.js"],"sourcesContent":["import { Configuration, OpenAIApi } from \"openai\"\n\n\nasync function validateApiKey(apiKey) {\n\n    const configuration = new Configuration({\n        apiKey: apiKey,\n    });\n    const openai = new OpenAIApi(configuration);\n\n    try {\n        const completion = await openai.createCompletion({\n            model: \"text-davinci-002\",\n        });\n        console.log(\"result\" + completion.data.choices[0].text)\n    } catch (error) {\n        console.log('False')\n        return false;\n    }\n    return true\n}\n\nasync function generateTitles(apiKey, keywords) {\n    // return \"-Car vs. Motorcycle: The Pros and Cons  -The debate of Car vs. Motorcycle: Which is better? -Advantages and disadvantages of Cars vs Motorcycles -Cars vs Motorcycles: A Comprehensive Comparison -The Pros and Cons of Cars and Motorcycles\"\n    const configuration = new Configuration({\n        apiKey: apiKey,\n    });\n    const openai = new OpenAIApi(configuration);\n\n    try {\n        const completion = await openai.createCompletion({\n            model: \"text-davinci-002\",\n            prompt: \"Generate blog topics on: \" + keywords + \"\\n\\n 1.\",\n            temperature: 0.7,\n            max_tokens: 100,\n            top_p: 1,\n            frequency_penalty: 0,\n            presence_penalty: 0\n        });\n        return completion.data.choices[0].text\n    } catch (error) {\n        if (error.response) {\n            console.error(error.response.status);\n            console.error(error.response.data);\n        } else {\n            console.error(error)\n        }\n        return false\n    }\n}\n\nasync function generateDescriptions(apiKey, title) {\n    // return \"\" +\n    //     \"1. many people debate whether cars or motorcycles are better. There are pros and cons to both. It really depends on what you are looking for in a vehicle. \\n\" +\n    //     \"2. Cars vs. motorcycles: which is better for you? It depends on your needs and preferences. Consider the pros and cons of each before making a decision. \\n\" +\n    //     \"3. Can't decide between a car and a motorcycle? Here's a helpful guide to help you make the best choice for you.Consider your needs and wants before making a decision. \\n\" +\n    //     \"4. Not sure if a car or motorcycle is right for you ? Here's a helpful guide to help you decide. Consider the pros and cons of each before making a final decision. \\n\" +\n    //     \"5. Car or motorcycle ? It's a tough choice, but we're here to help.Consider your needs and preferences before making a decision.\" +\n    //     \"6. Trying to decide between a car and a motorcycle ? Here are some things to consider before making your final decision.\" +\n    //     \"7. Still trying to decide if a car or motorcycle is right for you ? Check out this helpful guide to help you make the best decision for you.\"\n    const configuration = new Configuration({\n        apiKey: apiKey,\n    });\n    const openai = new OpenAIApi(configuration);\n\n    try {\n        const completion = await openai.createCompletion({\n            model: \"text-davinci-002\",\n            prompt: \"Generate blog meta descriptions on:\" + title + \"\\n\\n 1.\",\n            temperature: 0.7,\n            max_tokens: 200,\n            top_p: 1,\n            frequency_penalty: 0,\n            presence_penalty: 0\n        });\n        console.log(completion.data.choices[0].text)\n        return completion.data.choices[0].text\n\n    } catch (error) {\n        if (error.response) {\n            console.error(error.response.status);\n            console.error(error.response.data);\n        } else {\n            console.error(error)\n        }\n        return false\n    }\n}\n\nasync function generateHeadings(apiKey, title) {\n    // return \"-Car vs. Motorcycle: The Pros and Cons  -The debate of Car vs. Motorcycle: Which is better? -Advantages and disadvantages of Cars vs Motorcycles -Cars vs Motorcycles: A Comprehensive Comparison -The Pros and Cons of Cars and Motorcycles\"\n\n    const configuration = new Configuration({\n        apiKey: apiKey,\n    });\n    const openai = new OpenAIApi(configuration);\n\n    try {\n        const completion = await openai.createCompletion({\n            model: \"text-davinci-002\",\n            prompt: \"Expand the blog title in to high level blog sections: \" + title + \" \\n\\n- Introduction: \",\n            temperature: 0.7,\n            max_tokens: 200,\n            top_p: 1,\n            frequency_penalty: 0,\n            presence_penalty: 0\n        });\n        console.log(completion.data.choices[0].text)\n        return completion.data.choices[0].text\n\n    } catch (error) {\n        if (error.response) {\n            console.error(error.response.status);\n            console.error(error.response.data);\n        } else {\n            console.error(error)\n        }\n        return false\n    }\n}\n\nasync function generateBlog(apiKey, headings) {\n\n    let blog = \"\";\n    const configuration = new Configuration({\n        apiKey: apiKey,\n    });\n    const openai = new OpenAIApi(configuration);\n\n    for (let i = 0; i < headings.length; i++){\n        blog.concat(\"\\n\" + headings[i])\n        try {\n            const completion = await openai.createCompletion({\n                model: \"text-davinci-002\",\n                prompt: \"Expand the blog section in to a detailed professional , witty and clever explanation. \\n\\n\" + headings[i],\n                temperature: 0.7,\n                max_tokens: 300,\n                top_p: 1,\n                frequency_penalty: 0,\n                presence_penalty: 0\n            });\n            blog.concat(\"\\n\" + completion.data.choices[0].text)\n\n        } catch (error) {\n            if (error.response) {\n                console.error(error.response.status);\n                console.error(error.response.data);\n            } else {\n                console.error(error)\n            }\n            return false\n        }\n    }\n        \n    console.log(blog)\n    return blog;\n}\nexport { validateApiKey, generateTitles, generateDescriptions, generateHeadings, generateBlog }"],"mappings":"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"},"metadata":{},"sourceType":"module"}